# Put Indexes Operation

 ---

{NOTE: }

* There are a few ways to create and deploy indexes in a database.  

* This page describes deploying a **static-index** using the `PutIndexesOperation` Operation.  
  For a general description of Operations see [what are operations](../../../../client-api/operations/what-are-operations).  

* In this page:
    * [Ways to deploy indexes - short summary](../../../../client-api/operations/maintenance/indexes/put-indexes#ways-to-deploy-indexes---short-summary)
    * [Put indexes operation with IndexDefinition](../../../../client-api/operations/maintenance/indexes/put-indexes#put-indexes-operation-with-indexdefinition)
    * [Put indexes operation with IndexDefinitionBuilder](../../../../client-api/operations/maintenance/indexes/put-indexes#put-indexes-operation-with-indexdefinitionbuilder)
    * [Syntax](../../../../client-api/operations/maintenance/indexes/put-indexes#syntax)

{NOTE/}

---

{PANEL: Ways to deploy indexes - short summary }

#### Static index:

There are a few ways to deploy a static-index from the Client API:  

  * Call `execute()` on a specific index instance
  * Call `IndexCreation.create_indexes()` to deploy multiple indexes
  * Execute `PutIndexesOperation` maintenance operation on the Document Store - see below
  * Learn more in [static indexes](../../../../indexes/creating-and-deploying#static-indexes)

#### Auto index:  

  * An auto-index is created by the server when making a filtering query that doesn't specify which index to use
  * Learn more in [auto indexes](../../../../indexes/creating-and-deploying#auto-indexes)

{PANEL/}

{PANEL: Put indexes operation with IndexDefinition }

Using `PutIndexesOperation` with **IndexDefinition** allows the following:  

  * Choosing any name for the index.
  * Setting low-level properties available in _IndexDefinition_.

{CODE-TABS}
{CODE-TAB:python:Index put_1@ClientApi\Operations\Maintenance\Indexes\Put.py /}
{CODE-TAB:python:JavaScript-index put_1_JS@ClientApi\Operations\Maintenance\Indexes\Put.py /}
{CODE-TABS/}

{PANEL/}

{PANEL: Put indexes operation with IndexDefinitionBuilder }

* Using `PutIndexesOperation` with an IndexDefinition created from an **IndexDefinitionBuilder** 
  allows setting low-level properties available in _IndexDefinitionBuilder_.  

* Note that only map or map-reduce indexes can be generated by the _IndexDefinitionBuilder_.  
  To generate multi-map indexes, use the above _IndexDefinition_ option. 

{CODE:python put_2@ClientApi\Operations\Maintenance\Indexes\Put.py /}

{PANEL/}

{PANEL: Syntax }

{CODE:python syntax@ClientApi\Operations\Maintenance\Indexes\Put.py /}

| Parameters | Type | Description |
| - |- | - |
| **\*indexes_to_add** | `IndexDefinition` | Definitions of indexes to deploy |

<a id="indexDefinition" />

| `IndexDefinition` parameter| Type | Description |
| - |- | - |
| **name** | `str` | Name of the index, a unique identifier |
| **maps** | `Set[str]` | All the map functions for the index |
| **reduce** | `str` | The index reduce function |
| **deployment_mode** | `IndexDeploymentMode` | Deployment mode<br>(PARALLEL, ROLLING) |
| **state** | `IndexState` | State of index<br>(NORMAL, DISABLED, IDLE, ERROR) |
| **priority** | `IndexPriority` | Priority of index<br>(LOW, NORMAL, HIGH) |
| **lock_mode** | `IndexLockMode` | Lock mode of index<br>(UNLOCK, LOCKED_IGNORE, LOCKED_ERROR) |
| **fields** | `Dict[str, IndexFieldOptions]` | _IndexFieldOptions_ per index field |
| **additional_sources** | `Dict[str, str]` | Additional code files to be compiled with this index |
| **additional_assemblies** | `Set[AdditionalAssembly]` | Additional assemblies that are referenced |
| **configuration** | `IndexConfiguration` | Can override [indexing configuration](../../../../server/configuration/indexing-configuration) by setting this dictionary |
| **output_reduce_to_collection** | `str` | A collection name for saving the reduce results as documents |
| **reduce_output_index** | `int` | This number will be part of the reduce results documents IDs |
| **pattern_for_output_reduce_to_collection_references** | `str` | Pattern for documents IDs which reference IDs of reduce results documents |
| **pattern_references_collection_name** | `str` | A collection name for the reference documents created based on provided pattern |

| `store.maintenance.send(put_indexes_op)` return value | Description |
| - | - |
| `List[PutIndexResult]` | List of _PutIndexResult_ per index |

| `PutIndexResult` parameter | Type | Description |
| - | - | - |
| **index** | `str` | Name of the index that was added |
| **raft_command_index** | `int` | Index of raft command that was executed |

{PANEL/}

## Related Articles

### Indexes

- [What are Indexes](../../../../indexes/what-are-indexes)
- [Creating and Deploying Indexes](../../../../indexes/creating-and-deploying)
- [Index Administration](../../../../indexes/index-administration)

### Operations

- [What are operations](../../../../client-api/operations/what-are-operations)
- [How to Get Indexes](../../../../client-api/operations/maintenance/indexes/get-indexes)
- [How to Delete Index](../../../../client-api/operations/maintenance/indexes/delete-index)
- [How to Reset Index](../../../../client-api/operations/maintenance/indexes/reset-index)
