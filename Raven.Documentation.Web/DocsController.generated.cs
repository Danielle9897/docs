// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Raven.Documentation.Web.Controllers
{
    public partial class DocsController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected DocsController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Index()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ArticlePage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ArticlePage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Suggest()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Suggest);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Search()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Search);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Validate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Validate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ValidateMappings()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ValidateMappings);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OldArticlePage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OldArticlePage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Generate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Generate);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public DocsController Actions { get { return MVC.Docs; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Docs";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Docs";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string ArticlePage = "ArticlePage";
            public readonly string Suggest = "Suggest";
            public readonly string Search = "Search";
            public readonly string Validate = "Validate";
            public readonly string ValidateMappings = "ValidateMappings";
            public readonly string OldArticlePage = "OldArticlePage";
            public readonly string Generate = "Generate";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string ArticlePage = "ArticlePage";
            public const string Suggest = "Suggest";
            public const string Search = "Search";
            public const string Validate = "Validate";
            public const string ValidateMappings = "ValidateMappings";
            public const string OldArticlePage = "OldArticlePage";
            public const string Generate = "Generate";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string language = "language";
            public readonly string version = "version";
        }
        static readonly ActionParamsClass_ArticlePage s_params_ArticlePage = new ActionParamsClass_ArticlePage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ArticlePage ArticlePageParams { get { return s_params_ArticlePage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ArticlePage
        {
            public readonly string version = "version";
            public readonly string language = "language";
            public readonly string key = "key";
            public readonly string page = "page";
            public readonly string fullVersion = "fullVersion";
        }
        static readonly ActionParamsClass_Suggest s_params_Suggest = new ActionParamsClass_Suggest();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Suggest SuggestParams { get { return s_params_Suggest; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Suggest
        {
            public readonly string language = "language";
            public readonly string version = "version";
            public readonly string searchTerm = "searchTerm";
        }
        static readonly ActionParamsClass_Search s_params_Search = new ActionParamsClass_Search();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Search SearchParams { get { return s_params_Search; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Search
        {
            public readonly string language = "language";
            public readonly string version = "version";
            public readonly string searchTerm = "searchTerm";
        }
        static readonly ActionParamsClass_Validate s_params_Validate = new ActionParamsClass_Validate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Validate ValidateParams { get { return s_params_Validate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Validate
        {
            public readonly string language = "language";
            public readonly string version = "version";
            public readonly string all = "all";
        }
        static readonly ActionParamsClass_ValidateMappings s_params_ValidateMappings = new ActionParamsClass_ValidateMappings();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ValidateMappings ValidateMappingsParams { get { return s_params_ValidateMappings; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ValidateMappings
        {
            public readonly string language = "language";
            public readonly string version = "version";
            public readonly string all = "all";
        }
        static readonly ActionParamsClass_OldArticlePage s_params_OldArticlePage = new ActionParamsClass_OldArticlePage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_OldArticlePage OldArticlePageParams { get { return s_params_OldArticlePage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_OldArticlePage
        {
            public readonly string version = "version";
            public readonly string language = "language";
            public readonly string key = "key";
        }
        static readonly ActionParamsClass_Generate s_params_Generate = new ActionParamsClass_Generate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Generate GenerateParams { get { return s_params_Generate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Generate
        {
            public readonly string language = "language";
            public readonly string version = "version";
            public readonly string key = "key";
            public readonly string all = "all";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _Layout = "_Layout";
                public readonly string DevControls = "DevControls";
                public readonly string Doc = "Doc";
                public readonly string NoSearchResults = "NoSearchResults";
                public readonly string NotDocumented = "NotDocumented";
                public readonly string NotFound = "NotFound";
                public readonly string Search = "Search";
                public readonly string SearchResults = "SearchResults";
                public readonly string Toc = "Toc";
                public readonly string Validate = "Validate";
                public readonly string ValidateMappings = "ValidateMappings";
                public readonly string VersionLinks = "VersionLinks";
                public readonly string VersionSelector = "VersionSelector";
            }
            public readonly string _Layout = "~/Views/Docs/_Layout.cshtml";
            public readonly string DevControls = "~/Views/Docs/DevControls.cshtml";
            public readonly string Doc = "~/Views/Docs/Doc.cshtml";
            public readonly string NoSearchResults = "~/Views/Docs/NoSearchResults.cshtml";
            public readonly string NotDocumented = "~/Views/Docs/NotDocumented.cshtml";
            public readonly string NotFound = "~/Views/Docs/NotFound.cshtml";
            public readonly string Search = "~/Views/Docs/Search.cshtml";
            public readonly string SearchResults = "~/Views/Docs/SearchResults.cshtml";
            public readonly string Toc = "~/Views/Docs/Toc.cshtml";
            public readonly string Validate = "~/Views/Docs/Validate.cshtml";
            public readonly string ValidateMappings = "~/Views/Docs/ValidateMappings.cshtml";
            public readonly string VersionLinks = "~/Views/Docs/VersionLinks.cshtml";
            public readonly string VersionSelector = "~/Views/Docs/VersionSelector.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_DocsController : Raven.Documentation.Web.Controllers.DocsController
    {
        public T4MVC_DocsController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string language, string version);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(string language, string version)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            IndexOverride(callInfo, language, version);
            return callInfo;
        }

        [NonAction]
        partial void ArticlePageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string version, string language, string key, int? page, string fullVersion);

        [NonAction]
        public override System.Web.Mvc.ActionResult ArticlePage(string version, string language, string key, int? page, string fullVersion)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ArticlePage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "key", key);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fullVersion", fullVersion);
            ArticlePageOverride(callInfo, version, language, key, page, fullVersion);
            return callInfo;
        }

        [NonAction]
        partial void SuggestOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string language, string version, string searchTerm);

        [NonAction]
        public override System.Web.Mvc.ActionResult Suggest(string language, string version, string searchTerm)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Suggest);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchTerm", searchTerm);
            SuggestOverride(callInfo, language, version, searchTerm);
            return callInfo;
        }

        [NonAction]
        partial void SearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string language, string version, string searchTerm);

        [NonAction]
        public override System.Web.Mvc.ActionResult Search(string language, string version, string searchTerm)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Search);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "searchTerm", searchTerm);
            SearchOverride(callInfo, language, version, searchTerm);
            return callInfo;
        }

        [NonAction]
        partial void ValidateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string language, string version, bool all);

        [NonAction]
        public override System.Web.Mvc.ActionResult Validate(string language, string version, bool all)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Validate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "all", all);
            ValidateOverride(callInfo, language, version, all);
            return callInfo;
        }

        [NonAction]
        partial void ValidateMappingsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string language, string version, bool all);

        [NonAction]
        public override System.Web.Mvc.ActionResult ValidateMappings(string language, string version, bool all)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ValidateMappings);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "all", all);
            ValidateMappingsOverride(callInfo, language, version, all);
            return callInfo;
        }

        [NonAction]
        partial void OldArticlePageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string version, string language, string key);

        [NonAction]
        public override System.Web.Mvc.ActionResult OldArticlePage(string version, string language, string key)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OldArticlePage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "key", key);
            OldArticlePageOverride(callInfo, version, language, key);
            return callInfo;
        }

        [NonAction]
        partial void GenerateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string language, string version, string key, bool all);

        [NonAction]
        public override System.Web.Mvc.ActionResult Generate(string language, string version, string key, bool all)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Generate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "key", key);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "all", all);
            GenerateOverride(callInfo, language, version, key, all);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
